I"ß
(function() {
  $(document).on('turbolinks:load', function() {
    if ($('#tree-settings').length > 0) {
      $('#tree-settings').fancytree({
        extensions: ['table'],
        renderNode: function(event, data) {},
        escapeTitles: false,
        autoScroll: true,
        selectMode: 2,
        checkbox: true,
        source: [
          {
            'title': 'Moto G',
            'folder': true,
            'online': '<i class="fas fa-circle"></i>',
            'archived': false,
            'size': '123kb',
            'addedBy': 'Motorola',
            'updated': 2014
          }
        ],
        table: {
          checkboxColumnIdx: 0,
          nodeColumnIdx: 1
        },
        init: function(event, data) {
          var comparer, getCellValue, node;
          node = $('#tree-settings').fancytree('getRootNode');
          comparer = function(index) {
            return function(a, b) {
              var valA, valB;
              valA = getCellValue(a, index);
              valB = getCellValue(b, index);
              if ($.isNumeric(valA) && $.isNumeric(valB)) {
                return valA - valB;
              } else {
                return valA.toString().localeCompare(valB);
              }
            };
          };
          getCellValue = function(row, index) {
            return $(row).children('td').eq(index).text();
          };
          return $('.sort').click(function() {
            var i, rows, table;
            $('th').removeClass('active');
            table = $(this).parents('table').eq(0);
            rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
            $(this).toggleClass('active');
            $(this).toggleClass('sortDSC');
            this.asc = !this.asc;
            if (!this.asc) {
              rows = rows.reverse();
            }
            i = 0;
            while (i < rows.length) {
              table.append(rows[i]);
              i++;
            }
          });
        },
        select: function(event, data) {
          var selNodes;
          selNodes = data.tree.getSelectedNodes();
          console.log(selNodes);
          if (selNodes.length > 0) {
            $('#folder-actions').addClass('d-block');
            $('#folder-actions a.move').attr('href', data.node.data.resource_move_url);
          } else {
            $('#folder-actions').removeClass('d-block');
          }
        },
        renderColumns: function(event, data) {
          var $tdList, node;
          node = data.node;
          $tdList = $(node.tr).find('>td');
        }
      });
      return;
    }
    $('#metadataDataTable').DataTable({
      columnDefs: [
        {
          targets: 'no-sort',
          orderable: false
        }
      ]
    });
  });

}).call(this);
:ET